plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = "${project.mod_version}+${project.minecraft_version}"
group = project.maven_group

repositories {
	mavenLocal()

	// Mod Menu.
	maven { url 'https://maven.terraformersmc.com' }

	// MidnightControls.
	maven {
		name 'Gegy'
		url 'https://maven.gegy.dev'
	}
	maven { url = "https://aperlambda.github.io/maven" }
	maven { url = "https://api.modrinth.com/maven" }

	// Cloth Config.
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/releases/" }

	// Jitpack for Mixin Extras.
	maven { url 'https://jitpack.io' }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Mixin Extras for extra compatibility.
	include(implementation("com.github.LlamaLad7:MixinExtras:${project.mixin_extras_version}"))
	annotationProcessor("com.github.LlamaLad7:MixinExtras:${project.mixin_extras_version}")

	// Mod Menu integration. Currently unused.
	modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"

	// Cloth Config for easy config menu.
	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
		exclude group: "net.fabricmc.fabric-api"
	}

	// Controller Support
	modImplementation "dev.lambdaurora:spruceui:${project.spruceui_version}"
	modImplementation "maven.modrinth:midnightlib:${project.midnightlib_version}"
    modImplementation "dev.lambdaurora:lambdacontrols:${project.lambdacontrols_version}"
	api('org.aperlambda:lambdajcommon:1.8.1') {
		exclude group: 'com.google.code.gson'
		exclude group: 'com.google.guava'
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	repositories {

	}
}
