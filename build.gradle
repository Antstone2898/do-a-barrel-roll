plugins {
    id "base"
    id "maven-publish"

    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.1.+" apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"
    apply plugin: "maven-publish"

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        // The following line declares the mojmap mappings, you may use other mappings as well

        // The following line declares the yarn mappings you may select this one as well.
        mappings "net.fabricmc:yarn:${rootProject.yarn_version}:v2"
    }
}

tasks {
    // Register a custom "collect jars" task that copies the Fabric and Forge mod jars
    // into the root project's build/libs. This makes it easier to find them
    // for testing and releasing.
    def collectJars = tasks.register("collectJars", Copy) {copy ->

        subprojects.forEach {
            def task = it.tasks.getByName("remapJar")

            dependsOn(task)

            copy.from task
            copy.into buildDir.path + "/libs"
        }
    }

    // Set up assemble to depend on the collectJars task, so it gets run on gradlew build.
    assemble {
        dependsOn(collectJars)
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"

    archivesBaseName = rootProject.mod_id
    version = "${rootProject.mod_version}+${rootProject.minecraft_version}"
    group = rootProject.maven_group

    repositories {

        flatDir {
            dirs 'mods'
        }

        mavenLocal()

        maven { url 'https://maven.fabricmc.net' }

        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.

        // Personal maven for cicada and backup mirrors of some dependencies.
        maven { url = "https://maven.enjarai.nl/mirrors" }
        maven { url = "https://maven.enjarai.nl/releases" }

        maven {
            url = "https://www.cursemaven.com"
            allowInsecureProtocol = true
        }

        // Mod Menu.
        maven { url 'https://maven.terraformersmc.com' }

        // MidnightControls.
        maven { url = "https://aperlambda.github.io/maven" }
        maven {
            name = "Modrinth"
            url = "https://api.modrinth.com/maven"
            content {
                includeGroup "maven.modrinth"
            }
        }

        // Cloth Config.
        maven { url "https://maven.shedaniel.me/" }
        maven { url "https://maven.terraformersmc.com/releases/" }

        // Jitpack for Mixin Extras.
        maven {
            url 'https://jitpack.io'
            content {
                includeGroup 'com.github.LlamaLad7'
            }
        }

        // YACL/Controlify
        maven { url = "https://maven.isxander.dev/releases" }
        maven { url = "https://maven.quiltmc.org/repository/release/" }

        // Cardinal Components API
        maven {
            name = "Ladysnake Mods"
            url = 'https://ladysnake.jfrog.io/artifactory/mods'
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()
    }
}

// Disable publishing for the root project.
project.tasks.publish.enabled = false

subprojects {
    if (!path.startsWith(":common")) {
        tasks {
            tasks.getByName("remapJar") {
                dependsOn("shadowJar")
                // The project name will be "fabric" or "forge", so this will become the classifier/suffix
                // for the jar. For example: do-a-barrel-roll-2.0.0+1.19.2-fabric.jar
                archiveClassifier.set(project.name)
            }
        }

        publishing {
            repositories {
                maven {
                    name = "enjaraiMaven"
                    url = "https://maven.enjarai.nl/releases"
                    credentials(PasswordCredentials)
                    authentication {
                        basic(BasicAuthentication)
                    }
                }
            }

            publications {
                mavenJava(MavenPublication) {
                    groupId = project.maven_group
                    artifactId = archivesBaseName
                    version = project.version + "-" + project.name

                    from components.java
                }
            }
        }
    }
}
