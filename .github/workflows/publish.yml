name: Publish

on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
      game_vers:
        required: true
        type: string
      java_vers:
        required: true
        type: string
      GITHUB_REF:
        required: true
        type: string
    secrets:
      CURSEFORGE_TOKEN:
        required: true
      MODRINTH_TOKEN:
        required: true
      PUBLISH_MAVEN_USERNAME:
        required: true
      PUBLISH_MAVEN_PASSWORD:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v2
        with:
          ref: ${{ inputs.branch }}

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ inputs.java_vers }}

      - name: Grant Execute Permiussion
        run: chmod +x gradlew

      - name: Build
        run: ./gradlew build

      - name: Publish to Maven
        run: ./gradlew publish
        env:
          ORG_GRADLE_PROJECT_enjaraiMavenUsername: ${{ secrets.PUBLISH_MAVEN_USERNAME }}
          ORG_GRADLE_PROJECT_enjaraiMavenPassword: ${{ secrets.PUBLISH_MAVEN_PASSWORD }}

      - name: Upload To Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Artifacts
          path: ./build/libs/
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v2
        with:
          ref: ${{ inputs.branch }}
      - name: Download Artifacts
        id: download
        uses: actions/download-artifact@v2
        with:
          name: Artifacts

      - name: Extract Mod Version
        uses: actions/github-script@v5
        id: mod_version
        env:
          REF: '${{ inputs.GITHUB_REF }}'
        with:
          result-encoding: string
          script: |
            return process.env.REF.replace(/\/?refs\/tags\//, '')
      - name: Extract Game Version
        uses: actions/github-script@v5
        id: game_version
        env:
          GV: '${{ inputs.game_vers }}'
        with:
          result-encoding: string
          script: |
            return process.env.GV.split(/\s/)[0]

      - name: Run Publish Fabric
        if: ${{ steps.fabric_release.outputs.result != 'false' }}
        uses: Kir-Antipov/mc-publish@v3.2
        with:
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          curseforge-token: ${{ secrets.CURSEFORGE_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

          name: '${{ steps.mod_version.outputs.result }} for Fabric ${{ steps.game_version.outputs.result }}'
          version: '${{ steps.mod_version.outputs.result }}+${{ steps.game_version.outputs.result }}-fabric'

          dependencies: |
            fabric-api | depends | *
            yacl | depends | *
            cardinal-components | includes | *

          files-primary: '${{ steps.download.outputs.download-path }}/!(*-@(dev\|sources\|javadoc)).jar'
          files-secondary: '${{ steps.download.outputs.download-path }}/*-@(dev\|sources\|javadoc).jar'

          modrinth-featured: false
          changelog-file: CHANGELOG.md
